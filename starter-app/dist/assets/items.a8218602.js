const{board:t}=window.miro,o={card:{textFields:["title","description"]},image:{textFields:["title","url"]},shape:{textFields:["content"]},sticky_note:{textFields:["content"]},text:{textFields:["content"]}};function e(t){var o=new Array;const e=[...t.matchAll("[$]{1}[a-zA-Z0-9äöüÄÖÜ]+")];for(var n of e)o.push(n[0].substring(1));return o}function n(t,o){var n=new Array;for(var r of o.textFields){const o=e(t[r]);n.push(...o)}return n}async function r(){var e={};for(var r in o){let l=await t.get({type:[r]});for(var a of l){const t=n(a,o[r]);(null==t?void 0:t.length)&&(e[a.id]=t)}}return e}function a(t,o){var e=new Array;for(var n in o){o[n].includes(t)&&e.push(n)}return e}function l(t,e,n){console.log(t.x,e,n);var r=o[t.type];for(var a of r.textFields)t[a]=t[a].replace("$"+e,n);t.sync(),console.log(t,e,n)}async function i(){console.log("setting variables");var o=await r();console.log("Printing widgets"),console.log(o);var e=await t.getAppData("variables");for(var n in console.log("Printing variables"),console.log(e),e){console.log(n+" variable set");var i=a(n,o);for(var s of i){var c=e[n];try{var v=await t.getById(s);console.log(s+" widget set"),console.log(v.x),l(v,n,c)}catch(g){console.log(g)}}}}export{r as findVariables,i as setVariables};
