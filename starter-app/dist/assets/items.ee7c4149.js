const{board:t}=window.miro,e={card:{textFields:["title","description"]},image:{textFields:["title","url"]},shape:{textFields:["content"]},sticky_note:{textFields:["content"]},text:{textFields:["content"]}};function o(t){var e=new Array;const o=[...t.matchAll("[$]{1}[a-zA-Z0-9äöüÄÖÜ]+")];for(var n of o)e.push(n[0].substring(1));return e}function n(t,e){var n=new Array;for(var r of e.textFields){const e=o(t[r]);n.push(...e)}return n}async function r(){var o={};for(var r in e){let i=await t.get({type:[r]});for(var a of i){const t=n(a,e[r]);(null==t?void 0:t.length)&&(o[a.id]=t)}}return o}function a(t,e){var o=new Array;for(var n in e){e[n].includes(t)&&o.push(n)}return o}function i(t,o,n){var r=e[t.type];for(var a of r.textFields)t[a]=t[a].replace("$"+o,n);t.sync()}async function l(){console.log("setting variables");var e=await r();console.log("Printing widgets"),console.log(e);var o=await t.getAppData("variables");for(var n in console.log("Printing variables"),console.log(o),o){console.log(n+" variable set");var l=a(n,e);for(var s of l){var c=o[n];try{var v=await t.getById(s);console.log(s+" widget set"),i(v,n,c)}catch(f){console.log(f)}}}}export{r as findVariables,l as setVariables};
